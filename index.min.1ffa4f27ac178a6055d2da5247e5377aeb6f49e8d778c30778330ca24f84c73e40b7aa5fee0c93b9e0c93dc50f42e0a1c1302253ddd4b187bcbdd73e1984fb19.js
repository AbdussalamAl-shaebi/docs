var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/",title:"Overview",description:".NET WebAPI Boilerplate Template built with .NET 6.0. Incorporates the most essential Packages your projects will ever need. Follows Clean Architecture Principles.",content:'\u003ch2 id="about"\u003eAbout\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003edotnet-webapi-boilerplate\u003c/code\u003e is the integral part of the \u003ccode\u003efullstackhero\u003c/code\u003e project.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efullstackhero\u003c/code\u003e is a venture to develop industry leading boilerplate templates for the dotnet stack as the backend (Web API) along with modern client frameworks like Angular, MVC and Blazor.\u003c/p\u003e\n\u003cp\u003eThis repository contains the WebApi Project of \u003ccode\u003efullstackhero\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="release-planning"\u003eRelease Planning\u003c/h2\u003e\n\u003ch3 id="003-rc-is-available-now"\u003e0.0.3 RC is available now!\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eMigration Refresh\u003c/li\u003e\n\u003cli\u003eSecurity Patches\u003c/li\u003e\n\u003cli\u003eImage Upload Fix\u003c/li\u003e\n\u003cli\u003eOption to Disable Swagger\u003c/li\u003e\n\u003cli\u003eCleaner Code\u003c/li\u003e\n\u003cli\u003eActivate / Deactivate Tenants\u003c/li\u003e\n\u003cli\u003eUpgrade Tenant Subscription\u003c/li\u003e\n\u003cli\u003eAdvanced Search\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis is the first pre-release version of the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e package. Newer versions will be available on a weekly basis with newer updates and patches. \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/"\u003eRead the getting-started guide for more.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe Release Version is expected to be out by November 2021 as soon as .NET 6 LTS is launched by Microsoft. Preview versions of this project are available for Initial Developer Testing.\u003c/p\u003e\n\u003ch2 id="quick-start-guide"\u003eQuick Start Guide\u003c/h2\u003e\n\u003cp\u003eOpen up your Command Prompt / Powershell and run the following command to install the solution template.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new --install FullStackHero.WebAPI.Boilerplate\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis would install the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e template globally on your machine. With that done, let\u0026rsquo;s see how you can start generating complete .NET WebAPI Solutions seamlessly.\u003c/p\u003e\n\u003cp\u003eSimply navigate to a new directory (wherever you want to place your new solution), and open up Command Prompt at the opened directory.\u003c/p\u003e\n\u003cp\u003eRun the following command. Note that, in this demonstration, I am naming my new solution as \u003ccode\u003eFSH.Starter\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new fsh-api -o FSH.Starter\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor further steps and details, \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/"\u003eRead the Getting Started Guide\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="important-links--documentations"\u003eImportant Links \u0026amp; Documentations\u003c/h2\u003e\n\u003cp\u003eOverview - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/"\u003eRead\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGetting Started - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/"\u003eRead\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDevelopment Environment - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/"\u003eLearn about setting up the DEV environment\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eTrack Progress - \u003ca href="https://github.com/fullstackhero/dotnet-webapi-boilerplate/milestone/1"\u003eRelease 1.0 Milestones\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eParticipate in Discussions - \u003ca href="https://github.com/fullstackhero/dotnet-webapi-boilerplate/discussions"\u003eQNA \u0026amp; General Discussions\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eJoin our Discord - \u003ca href="https://discord.gg/gdgHRt4mMw"\u003efullstackhero @ Discord\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="features"\u003eFeatures\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Built on .NET 6.0\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Follows Clean Architecture Principles\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Completely Documented at \u003ca href="https://fullstackhero.net"\u003efullstackhero.net\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Multi Tenancy Support\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Create Tenants with Multi Database / Shared Database Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Activate / Deactivate Tenants on Demand\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Upgrade Subscription of Tenants - Add More Validity Months to each tenant!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Supports MySQL, MSSQL \u0026amp; PostgreSQL!\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Uses Entity Framework Core as DB Abstraction\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Flexible Repository Pattern\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Dapper Integration for Optimal Performance\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Serilog Integration\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Swagger Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Mapster Integration for Quicker Mapping\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e API Versioning\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Response Caching - Distributed Caching\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Fluent Validations\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Audit Logging\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Advanced User \u0026amp; Role Based Permission Management\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Code Analysis \u0026amp; StyleCop Integration with Rulesets\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e JSON Based Localization with Caching\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Hangfire Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e File Storage Service\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Test Projects\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e \u0026amp; Much More\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="community"\u003eCommunity\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDiscord \u003ca href="https://discord.gg/gdgHRt4mMw"\u003e@fullstackhero\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="license"\u003eLicense\u003c/h2\u003e\n\u003cp\u003eThis project is licensed with the \u003ca href="LICENSE"\u003eMIT license\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="support-"\u003eSupport ⭐\u003c/h2\u003e\n\u003cp\u003eHas this Project helped you learn something New? or Helped you at work?\nHere are a few ways by which you can support.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLeave a star! ⭐\u003c/li\u003e\n\u003cli\u003eRecommend this awesome project to your colleagues. 🥇\u003c/li\u003e\n\u003cli\u003eDo consider endorsing me on LinkedIn for ASP.NET Core - \u003ca href="https://codewithmukesh.com/linkedin"\u003eConnect via LinkedIn\u003c/a\u003e 🦸\u003c/li\u003e\n\u003cli\u003eOr, If you want to support this project in the long run, \u003ca href="https://www.buymeacoffee.com/codewithmukesh"\u003econsider buying me a coffee\u003c/a\u003e! ☕\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca class="btn btn-primary btn-lg px-3 mb-2" style="font-size: large;"\nhref="https://www.buymeacoffee.com/codewithmukesh" target="_blank" role="button"\u003e\u003ci style="margin-right: 5px;" class="fas fa-mug-hot"\u003e \u003c/i\u003e Buy me\na Coffee\u003c/a\u003e\u003c/p\u003e\n'}).add({id:1,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/",title:"Development Environment",description:"Setting up the Development Environment for the .NET WebApi Boilerplate",content:'\u003cp\u003efullstackhero\u0026rsquo;s \u003cstrong\u003e.NET WebApi Boilerplate\u003c/strong\u003e Project Development needs you to have the following applications / tools available on your machine. Please Note that this project is being built on a Windows 10 Machine using Visual Studio Code IDE.\u003c/p\u003e\n\u003ch2 id="net-sdk"\u003e.NET SDK\u003c/h2\u003e\n\u003cp\u003eAs mentioned earlier, this project is built with the latest available .NET SDK, which is .NET 6.0. Since the SDK is currently at preview, the project will be released by Mid-November as soon as Microsoft launches .NET 6.0 LTS SDK. But that doesn\u0026rsquo;t stop you from testing out the application!\u003c/p\u003e\n\u003cp\u003eEnsure that you have the latest version of the SDK available - \u003ca href="https://dotnet.microsoft.com/download/dotnet/6.0"\u003eDownload from Microsoft\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡 \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eNote : At the time of compiling this documentation, the latest version available was dotnet-sdk-6.0.100-rc.2.21505.57 \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="ide"\u003eIDE\u003c/h2\u003e\n\u003cp\u003eVisual Studio Code IDE is the recommended IDE to use for fullstackhero\u0026rsquo;s .NET WebApi Boilerplate Project Development. If you are not already using this IDE, consider switching to it. It\u0026rsquo;s definitely worth it! (\u003cem\u003eFun Fact : I recently switched from Visual Studio 2019 Community to Visual Studio Code and it\u0026rsquo;s been awesome!\u003c/em\u003e)\u003c/p\u003e\n\u003cp\u003eHowever, you are always free to use your choice of IDEs as well.\u003c/p\u003e\n\u003cp\u003eIncase you intend to use Visual Studio Code for development, here are a bunch of helpful extensions that I use:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEditorConfig for VS Code\u003c/li\u003e\n\u003cli\u003eC#\u003c/li\u003e\n\u003cli\u003eC# Extensions\u003c/li\u003e\n\u003cli\u003eDocker\u003c/li\u003e\n\u003cli\u003eMarkdown All in One\u003c/li\u003e\n\u003cli\u003eNuGet Gallery\u003c/li\u003e\n\u003cli\u003eMaterial Icon Theme\u003c/li\u003e\n\u003cli\u003eREST Client\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡 \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eNote : All the screenshots included in these documentations are from Visual Studio Code Point of View. \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="database-servers"\u003eDatabase Servers\u003c/h2\u003e\n\u003cp\u003efullstackhero\u0026rsquo;s .NET WebApi Boilerplate gives you the freedom to choose between the following 3 popular Database Providers. Please note that with the current architecture of the API Project, it would rather be easy to add in support for more DB Providers with minimal change of code. But as of now, here are the 3 Supported Database Providers! By default, MSSQL is chosen as the Database Provider.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e\u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eMake sure that you have at least one of these servers installed, along with a Database Management tool like Azure Data Studio / PostgreSQL pgAdmin / MySQL Workbench  \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch3 id="mssql"\u003eMSSQL\u003c/h3\u003e\n\u003cp\u003eThere are high chances that you already have this installed on your machine. This is ideal for development and production for small-mid server applications.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCheck out the Community versions of this Server - \u003ca href="https://www.microsoft.com/en-in/sql-server/sql-server-downloads"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload SQL Server Management Studio (SSMS) - \u003ca href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload Azure Data Studio to browse your MSSQL Databases - \u003ca href="https://docs.microsoft.com/en-us/sql/azure-data-studio/download-azure-data-studio"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="mysql"\u003eMySQL\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCheck out the Community versions of this Server - \u003ca href="https://dev.mysql.com/downloads/mysql/"\u003eGet from mysql\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload MySQL Workbench - \u003ca href="https://dev.mysql.com/downloads/workbench/"\u003eGet from mysql\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="postgresql"\u003ePostgreSQL\u003c/h3\u003e\n\u003cp\u003eProbably the best Open Source Database Server with lots of Enterprise level features.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload postgresql Installer - \u003ca href="https://www.postgresql.org/download/"\u003eGet from postgresql.org\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="api-testing"\u003eAPI Testing\u003c/h2\u003e\n\u003cp\u003eWhen it comes to API Testing, Postman is the recommended tool. I have made sure to include a Postman Collection within the Repository under \u003cstrong\u003e/postman\u003c/strong\u003e folder to make sure you can test out all the existing endpoints. Note that there will be a detailed guide on how to use the given Postman Collection.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload Postman - \u003ca href="https://www.postman.com/downloads/"\u003eGet from postman.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="community-tools"\u003eCommunity Tools\u003c/h2\u003e\n\u003ch2 id="optionals"\u003eOptionals\u003c/h2\u003e\n\u003ch3 id="docker"\u003eDocker\u003c/h3\u003e\n'}).add({id:2,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/",title:"Getting Started",description:"Let's get started with the .NET WebApi Boilerplate!",content:'\u003cp\u003eTo start using fullstackhero .NET WebAPI Boilerplate, there are a couple of options.\u003c/p\u003e\n\u003cp\u003eBut before that, make sure that you have already setup your development environment that runs the prerequisite tools and SDKs. Refer \u003ca href="/dotnet-webapi-boilerplate/general/development-environment/"\u003eDevelopment Environment\u003c/a\u003e for details.\u003c/p\u003e\n\u003cp\u003eThis guide will take you right from installing the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e package to testing the API using the provided Postman Collection!\u003c/p\u003e\n\u003ch2 id="installing-nuget-package"\u003eInstalling NuGet Package\u003c/h2\u003e\n\u003cp\u003eThis is by far the easiest and the most streamlined way of getting the latest available release version of fullstackhero .NET WebApi Boilerplate.\u003c/p\u003e\n\u003cp\u003eOpen up your Command Prompt / Powershell and run the following command to install the solution template.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new --install FullStackHero.WebAPI.Boilerplate::0.0.5-rc\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu7c6c28e87a40d427635729a75465e448_73903_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eThis would install the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e template globally on your machine. Do note that, at the time of writing this documentation, the latest available version is \u003cstrong\u003e0.0.5-rc\u003c/strong\u003e which is also one of the first pre-release version of the package. It is highly likely that there is already a newer version available when you are reading this.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eTo get the latest version of the package, visit \u003ca href="https://www.nuget.org/packages/FullStackHero.WebAPI.Boilerplate"\u003enuget.org\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e\u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eFullStackHero.WebAPI.Boilerplate is now in pre-release state. You can find the latest version on NuGet.org \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="creating-your-first-solution"\u003eCreating your First Solution\u003c/h2\u003e\n\u003cp\u003eNow that you have installed the template locally on your machine, let\u0026rsquo;s see how you can start generating complete .NET WebAPI Solutions seamlessly.\u003c/p\u003e\n\u003cp\u003eSimply navigate to a new directory (wherever you want to place your new solution at), and open up Command Prompt at the opened directory.\u003c/p\u003e\n\u003cp\u003eRun the following command. Note that, in this demonstration I am naming my new solution as \u003ccode\u003eFSH.Starter\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new fsh-api -o FSH.Starter\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hud872c74a6a8cebad2cfe2304dd865871_46151_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/generate-solution.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eOnce that is done, your new solution is created for you. As simple as that!\u003c/p\u003e\n\u003cp\u003eHere are the folders and files created for you.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_500x0_resize_q100_lanczos.jpg 500w" width="649" height="431" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hufad432d56a96f488860d5d823c4cdcd6_118918_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/folder-structure.jpg"\n      width="649" height="431" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch2 id="alternatively"\u003eAlternatively..\u003c/h2\u003e\n\u003cp\u003eWhen you installed the NuGet package, there is also an entry that has been created into your Visual Studio Template for fullstackhero\u0026rsquo;s .NET WebAPI Boilerplate. If you find it easier to work with Visual Studio rather than CLI Commands to generate new solutions, you are free to do so.\u003c/p\u003e\n\u003cp\u003eSimply open up Visual Studio 2022 and Click on Create New Project.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_500x0_resize_q100_lanczos.jpg 500w" width="1012" height="674" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support_hu00bef45250d365283da6e25785f6e784_104503_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/visual-studio-support.jpg"\n      width="1012" height="674" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eImportant - Make sure to check the \u0026lsquo;Place solution and project in same directory\u0026rsquo; option. Else the solution and projects will be created on different folders and there will be build errors stating that few files are not found.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_500x0_resize_q100_lanczos.jpg 500w" width="1185" height="391" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory_hu54afb7ed2573a40d4d367c84911f7d85_24014_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/vs-same-directory.jpg"\n      width="1185" height="391" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eAnother issue I noticed with creating solutions via Visual Studio is that the Solution structure might be lost. This is a very minor bug, that maybe someone can figure out and fix in our template configuration. Microsoft doesn\u0026rsquo;t seem to have very detailed guide about this.\u003c/p\u003e\n\u003cp\u003eHowever, it\u0026rsquo;s always recommended to create new solutions via the Console.\u003c/p\u003e\n\u003ch2 id="running-the-application"\u003eRunning the Application\u003c/h2\u003e\n\u003cp\u003eNext, open up command prompt on this directory and run the following.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003ecode .\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis opens up the solution via Visual Code. Make sure that you have the prerequisite tools and SDKs setup.\u003c/p\u003e\n\u003ch3 id="setting-up-the-connection-string"\u003eSetting up the Connection String\u003c/h3\u003e\n\u003cp\u003eNext, let\u0026rsquo;s set up some valid connection strings. Navigate to \u003ccode\u003esrc/Host/Configurations\u003c/code\u003e and open up \u003ccode\u003edatabase.json\u003c/code\u003e. Here you would have to provide a valid connection string under the \u003ccode\u003eDatabaseSettings\u003c/code\u003e to either MSSQL,  MySQL or PostgreSQL instance. Below are some sample settings for each of the DB Providers.\u003c/p\u003e\n\u003cp\u003eDetails on the usage of other Settings will be explained in the upcoming documentations.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e\u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eIt is important to update the src/Host/Configurations/hangfire.json connection string / provider as well. \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch4 id="mysql"\u003eMySQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;DatabaseSettings\u0026quot;: {\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;server=localhost;uid=root;pwd=root;database=defaultRootDb;Allow User Variables=True\u0026quot;,\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;mysql\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="mssql"\u003eMSSQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;DatabaseSettings\u0026quot;: {\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;mssql\u0026quot;,\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;Data Source=(localdb)\\\\mssqllocaldb;Initial Catalog=rootTenantDb;Integrated Security=True;MultipleActiveResultSets=True\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="postgresql"\u003ePostgreSQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;DatabaseSettings\u0026quot;: {\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;Host=localhost;Database=rootTenantDb;Username=postgres;Password=root;Include Error Detail=true\u0026quot;,\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;postgresql\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="oracle"\u003eOracle\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n  \u0026quot;DatabaseSettings\u0026quot;: {\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;oracle\u0026quot;,\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=49154))(CONNECT_DATA =(SERVER=DEDICATED)(SERVICE_NAME=ORCLPDB1.localdomain)));User Id=fullstack;Password=password123\u0026quot;\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow you need to navigate to the \u003ccode\u003eHost (API) Project\u003c/code\u003e directory via CMD or VSCode\u0026rsquo;s native terminal and run the basic build and run command to get the API up and running. Run the following.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e cd src/Host\n dotnet build\n dotnet run\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu89cdd8c0a7ee9cdcc1ff2ac5bd6a63d3_310023_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/running-api.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eAs you can see from the logs, a couple of operations happen as soon as you launch the application. Let me give a brief idea on what happens when you run the application for the very first time.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe Migrations that already come out-of-the-box with the application gets applied. Note that you do not have to update the database.\u003c/li\u003e\n\u003cli\u003eThe Application is programmed to seed a default Tenant named \u003ccode\u003eroot\u003c/code\u003e, that is basically the super-admin of the entire application and has permissions to manage tenants.\u003c/li\u003e\n\u003cli\u003eOnce Tenant record is seeded, the tenant admin , roles and permissions are also seeded. Note that the default credentials for the root tenant admin is as follows.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n    \u0026quot;email\u0026quot;:\u0026quot;admin@root.com\u0026quot;,\n    \u0026quot;password\u0026quot;:\u0026quot;123Pa$$word!\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eThe Connection String that you provided in the appSettings will be taken as the \u003ccode\u003eroot\u003c/code\u003e Tenant\u0026rsquo;s Connection. Note that all the tenant data will be stored on to this connection under the Tenants table.\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:3,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/",title:"API Testing",description:"Testing fullstackhero's Web API",content:'\u003cp\u003efullstackhero\u0026rsquo;s Web API can be tested via Postman as well as the built in Swagger.\u003c/p\u003e\n\u003ch2 id="postman"\u003ePostman\u003c/h2\u003e\n\u003cp\u003eNow that our application is up and running, let\u0026rsquo;s fire up POSTMAN and run some basic requests. You can find the updated Postman collection under the /postman folder of your solution. Import this postman collection on to your local Postman.\u003c/p\u003e\n\u003cp\u003eNote that I have set up some default collection variables to make things easier.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_500x0_resize_q100_lanczos.jpg 500w" width="1126" height="344" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/postman-collection_hudb63cdb1b52ee885abdbc88f65024878_78993_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/api-testing/postman-collection.jpg"\n      width="1126" height="344" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eIn case your application happens to start on a different Port, you would have to change the \u003ccode\u003eurl\u003c/code\u003e variable on this collection and save it.\u003c/p\u003e\n\u003ch3 id="generating-access-token"\u003eGenerating Access Token\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s start by generating a token for the \u003ccode\u003eroot admin\u003c/code\u003e user! Navigate to the Identity/get-token request and simply run it. If everything goes as expected, you would be seeing a valid token as your response.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_500x0_resize_q100_lanczos.jpg 500w" width="1780" height="677" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/api-testing/token-response_huca89a35b58fa90c27d4272e37f0b4eec_273910_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/api-testing/token-response.jpg"\n      width="1780" height="677" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch3 id="search-brands"\u003eSearch Brands\u003c/h3\u003e\n\u003cp\u003eWhenever a valid token is generated via Postman, it is stored as a variable of the collection and is used by default for all the subsequent requests via Postman until the token expires. You can test that the token is valid by sending the \u0026lsquo;search-brands\u0026rsquo; request.\u003c/p\u003e\n\u003cp\u003eYour request body would look somewhat like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n  \u0026quot;keyword\u0026quot;: \u0026quot;\u0026quot;,\n  \u0026quot;pageNumber\u0026quot;: 0,\n  \u0026quot;pageSize\u0026quot;: 10,\n  \u0026quot;orderBy\u0026quot;: [\n    \u0026quot;id\u0026quot;\n  ]\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, by default as soon as your application in run for the first time, a couple of Brands are seeded into the database for demo purposes.\u003c/p\u003e\n\u003cp\u003eThe \u003cem\u003ekeyword\u003c/em\u003e parameter in the above request denotes the keyword you want to search for in the brands table. Let\u0026rsquo;s leave it empty for now and let all the other parameters stay unchanged.\u003c/p\u003e\n\u003cp\u003ePresuming that you have a valid token you\u0026rsquo;ll see:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n    \u0026quot;data\u0026quot;: [\n        {\n            \u0026quot;id\u0026quot;: \u0026quot;623e0000-3f5a-3c7c-c326-08d9b2a1c527\u0026quot;,\n            \u0026quot;name\u0026quot;: \u0026quot;Razor\u0026quot;,\n            \u0026quot;description\u0026quot;: \u0026quot;Sample Data\u0026quot;\n        },\n        {\n            \u0026quot;id\u0026quot;: \u0026quot;623e0000-3f5a-3c7c-dce4-08d9b2a1c527\u0026quot;,\n            \u0026quot;name\u0026quot;: \u0026quot;Samsung\u0026quot;,\n            \u0026quot;description\u0026quot;: \u0026quot;Sample Data\u0026quot;\n        },\n        {\n            \u0026quot;id\u0026quot;: \u0026quot;623e0000-3f5a-3c7c-dd82-08d9b2a1c527\u0026quot;,\n            \u0026quot;name\u0026quot;: \u0026quot;MSI\u0026quot;,\n            \u0026quot;description\u0026quot;: \u0026quot;Sample Data\u0026quot;\n        },\n        {\n            \u0026quot;id\u0026quot;: \u0026quot;623e0000-3f5a-3c7c-ddb0-08d9b2a1c527\u0026quot;,\n            \u0026quot;name\u0026quot;: \u0026quot;Huawei\u0026quot;,\n            \u0026quot;description\u0026quot;: \u0026quot;Sample Data\u0026quot;\n        }\n    ],\n    \u0026quot;currentPage\u0026quot;: 1,\n    \u0026quot;totalPages\u0026quot;: 1,\n    \u0026quot;totalCount\u0026quot;: 4,\n    \u0026quot;pageSize\u0026quot;: 10,\n    \u0026quot;hasPreviousPage\u0026quot;: false,\n    \u0026quot;hasNextPage\u0026quot;: false,\n    \u0026quot;messages\u0026quot;: null,\n    \u0026quot;succeeded\u0026quot;: true\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere you go.\u003c/p\u003e\n\u003ch3 id="creating-a-new-brand"\u003eCreating a New Brand\u003c/h3\u003e\n\u003cp\u003eOpen the \u003cstrong\u003ecreate-brands\u003c/strong\u003e request in Postman and run it. Click the \u0026lsquo;Body\u0026rsquo; tab to review the values we\u0026rsquo;ll be sending. After sending you should see a something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n    \u0026quot;data\u0026quot;: \u0026quot;0f8e6d6e-d574-4d2f-b9ac-4dd1c9ffa0ae\u0026quot;,\n    \u0026quot;messages\u0026quot;: [],\n    \u0026quot;succeeded\u0026quot;: true\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eResend the \u003cstrong\u003e\u0026lsquo;search-brands\u0026rsquo;\u003c/strong\u003e request to see your new brand listed in the response!\u003c/p\u003e\n\u003ch3 id="create-a-new-product"\u003eCreate a new Product\u003c/h3\u003e\n\u003cp\u003eNext let\u0026rsquo;s add a product. Run the \u003cstrong\u003e\u0026lsquo;create-product\u0026rsquo;\u003c/strong\u003e request at this point and you\u0026rsquo;ll see a failure message:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n    \u0026quot;source\u0026quot;: \u0026quot;DN.WebApi.Application\u0026quot;,\n    \u0026quot;exception\u0026quot;: \u0026quot;brand.notfound [en-US]\u0026quot;,\n    \u0026quot;errorCode\u0026quot;: 404,\n    \u0026quot;succeeded\u0026quot;: false\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat went wrong?? Click the \u0026lsquo;\u003cstrong\u003eBody\u003c/strong\u003e\u0026rsquo; tab and look at the value for the \u003cem\u003ebrandId\u003c/em\u003e. That field needs to match the \u003cem\u003eID\u003c/em\u003e value of the \u003cstrong\u003eBrands\u003c/strong\u003e table. When I created the Postman collection I had to use the values that existed while I was building the project from my workstation. If you revisit the \u0026lsquo;\u003cstrong\u003esearch-brands\u003c/strong\u003e\u0026rsquo; request and look at the results you\u0026rsquo;ll see a value for \u0026lsquo;\u003cem\u003eid\u003c/em\u003e\u0026rsquo;. Copy that value - return to the `\u003cstrong\u003ecreate-product\u003c/strong\u003e\' request - replace the id value with what you\u0026rsquo;d copied and re-send the command. It should report success now.\u003c/p\u003e\n'}).add({id:4,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/cli-commands/",title:"CLI Commands",description:"Here are some important CLI Commands that are to be used along with fullstackhero.",content:'\u003ch2 id="docker"\u003eDocker\u003c/h2\u003e\n\u003ch3 id="build"\u003eBuild\u003c/h3\u003e\n\u003cp\u003eThis command is to be executed from the root folder of the project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edocker build -t iammukeshm/dotnet-webapi:0.0.3-rc -t iammukeshm/dotnet-webapi:latest  .\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="push-to-dockerhub"\u003ePush to DockerHub\u003c/h3\u003e\n\u003cp\u003eThis command is to be executed from the root folder of the project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edocker push iammukeshm/dotnet-webapi\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="migrations"\u003eMigrations\u003c/h2\u003e\n\u003cp\u003eThis command is to be executed from the Host Directory of the project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet ef migrations add \u0026lt;CommitMessage\u0026gt; --project .././Migrators/Migrators.\u0026lt;Provider\u0026gt;/ --context ApplicationDbContext -o Migrations/Application\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCommitMessage : Enter a commit message here.\nProvider : Enter the available DB Provider name. MSSQL , MySQL , PostgreSQL , Oracle\u003c/p\u003e\n\u003cp\u003eWhile adding migrations for a particular provider, ensure that you have configured a valid connection string to the provider\u0026rsquo;s database at both \u003ccode\u003esrc/Host/Configurations/database.json\u003c/code\u003e and \u003ccode\u003esrc/Host/Configurations/hangfire.json\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="nuget"\u003eNuGet\u003c/h2\u003e\n\u003cp\u003eGenerates a NuGet Package of the entire solution. NuGet Configuration is available in the *.nuspec file at the root of the project directory. This command is to be executed from the Root Directory of the project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003enuget pack -NoDefaultExcludes\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:5,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/project-structure/",title:"Project Structure",description:"Here is how the .NET WebApi Boilerplate is structured.",content:'\u003cp\u003efullstackhero\u0026rsquo;s .NET WebApi Boilerplate is based on Clean Architecture. In other words, Onion / Hexagonal Architecture. \u003ca href="%22https://codewithmukesh.com/blog/onion-architecture-in-aspnet-core/%22"\u003eRead about the advantages and principles of Onion Architecture here →\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="general-structure"\u003eGeneral Structure\u003c/h2\u003e\n\u003cp\u003eThis means that the entire solution is built in such a way that it can be scaled, maintained easily by teams of developers. This WebAPI Solution Primarily consists of the following .csproj files.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e├── src\n│   ├── Host.csproj\n│   ├── Core\n│   |   ├── Application.csproj\n│   |   └── Domain.csproj\n|   ├── Infrastructure.csproj\n|   ├── Migrators\n│   |   ├── Migrators.MSSQL.csproj\n│   |   ├── Migrators.MySQL.csproj\n│   |   ├── Migrators.PostgreSQL.csproj\n│   |   └── Migrators.Oracle.csproj\n│   └── Shared\n│       └── Shared.DTOs.csproj\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe idea is to build a very loosely coupled architecture following best practices and packages. Let\u0026rsquo;s see in brief what responsibilities each of these projects handle.\u003c/p\u003e\n\u003ch3 id="host"\u003eHost\u003c/h3\u003e\n\u003cp\u003eContains the API Controllers and Startup Logic including ASP.NET Core Container setup. This is the entry point of the application. Also, other static files like the logs, localization jsons, images, email templates and most importantly the appsettings.json live under this project.\u003c/p\u003e\n\u003cp\u003eWith 0.0.5-rc, the appSettings.json is further split into variable sub-setting like database.json, security.json and so on for better modularity and organization. You can find these new JSONs under the Configurations folder of the Host project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e├── Host\n|   ├── Configurations\n|   ├── Controllers\n|   ├── Email Templates\n|   ├── Extensions\n|   ├── Files\n│   |   ├── Images\n│   |   └── Documents\n|   ├── Localization\n|   ├── Logs\n|   └── appsettings.json\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNote that the \u003cem\u003eHost\u003c/em\u003e project depends on\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApplication\u003c/li\u003e\n\u003cli\u003eInfrastructure\u003c/li\u003e\n\u003cli\u003eMigration Projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="application"\u003eApplication\u003c/h3\u003e\n\u003cp\u003eThis is one of the projects in the Core Folder apart from the Domain Project. Here you get to see Abstract Classes and Interfaces that are inherited and implemented in the Infrastructure Project. This refers to Dependency Inversion.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e├── Core\n|   ├── Application\n|   |   ├── Auditing\n|   |   ├── Catalog\n|   |   ├── Common\n|   |   ├── Dashboard\n|   |   ├── DependencyInjection\n|   |   ├── Identity\n|   |   ├── Multitenancy\n|   |   ├── Settings\n|   |   ├── Storage\n|   |   └── Wrapper\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe folders and split at the top level Feature-wise. Meaning, it now makes it easier for developers to understand the folder structure. Each of the feature folders like Catalog will have further sub-folders like\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEventHandlers\u003c/li\u003e\n\u003cli\u003eInterfaces\u003c/li\u003e\n\u003cli\u003eServices\u003c/li\u003e\n\u003cli\u003eValidators\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eand so on. Thus everything related to a feature will be found directly under that Feature folder.\u003c/p\u003e\n\u003cp\u003eIn cases where there are less number of classes / interfaces associated with a feature, all of these classes are put directly under the root of the feature folder. Only when the complexity of the feature increases, it is recommended to separate the classes by their type.\u003c/p\u003e\n\u003cp\u003eNote that the \u003cem\u003eApplication\u003c/em\u003e project does not depend on any other project.\u003c/p\u003e\n\u003ch3 id="domain"\u003eDomain\u003c/h3\u003e\n\u003cp\u003eNote that the \u003cem\u003eDomain\u003c/em\u003e project does not depend on any other project.\u003c/p\u003e\n\u003cp\u003eAs per Clean Architecture principles, the Core of this Solution i.e, Application and Domain projects do not depend on any other projects. This helps achieve Dependency Inversion (The \u0026lsquo;D\u0026rsquo; Principle of \u0026lsquo;SOLID\u0026rsquo;).\u003c/p\u003e\n'}).add({id:6,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/changelogs/",title:"Changelogs",description:"Track fullstackhero's Web API Changelogs.",content:'\u003ch3 id="005-rc"\u003e0.0.5-rc\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eCurrent Stable Version\u003c/code\u003e \u003ccode\u003e28/11/2021\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFixed Password Reset / Forgot\u003c/li\u003e\n\u003cli\u003eFixed Omnisharp Warnings / Code Cleanup\u003c/li\u003e\n\u003cli\u003eFixed Repository Method\u003c/li\u003e\n\u003cli\u003eLog Hangfire to Serilog - Thanks \u003ca href="https://github.com/frankyjquintero"\u003efrankyjquintero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eExtras Hangfire extensions - Thanks \u003ca href="https://github.com/frankyjquintero"\u003efrankyjquintero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eHangfire implementation examples - Thanks \u003ca href="https://github.com/frankyjquintero"\u003efrankyjquintero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeparate JSON files for each Settings - Thanks \u003ca href="https://github.com/unchase"\u003eunchase\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAdded Events and Handlers via MediatR - Thanks \u003ca href="https://github.com/frankyjquintero"\u003efrankyjquintero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMoved to Tenancy Middleware - Thanks \u003ca href="https://github.com/frankyjquintero"\u003efrankyjquintero\u003c/a\u003e \u0026amp; \u003ca href="https://github.com/fretje"\u003efretje\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSolution Cleanup - rulesets \u0026amp; analyzer - Thanks \u003ca href="https://github.com/fretje"\u003efretje\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAdded More Functions for RepositoryAsync - Thanks \u003ca href="https://github.com/ghaithprosoft"\u003eghaithprosoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEntity Database Seeding Simplified\u003c/li\u003e\n\u003cli\u003eFile-Scoped namespaces and implicit usings\u003c/li\u003e\n\u003cli\u003eBetter Folder Structure / Modular\u003c/li\u003e\n\u003cli\u003eMinimal API\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="004-rc"\u003e0.0.4-rc\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eBug fix in Repository / Update method.\u003c/li\u003e\n\u003cli\u003eEndpoint changes for Update / Delete Methods. (Postman Collection Updated)\u003c/li\u003e\n\u003cli\u003eFixed bug in Request Logging Middleware.\u003c/li\u003e\n\u003cli\u003eDisabled Request Logger by default to save log space.\u003c/li\u003e\n\u003cli\u003eAdds default Role (Basic) to any new registered user.\u003c/li\u003e\n\u003cli\u003eBasic User has default View / Search Permissions\u003c/li\u003e\n\u003cli\u003eCode Cleanups\u003c/li\u003e\n\u003cli\u003eTemplated Emails for User Registrations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="003-rc"\u003e0.0.3-rc\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSecurity Patches\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="002-rc"\u003e0.0.2-rc\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eMigration Refresh\u003c/li\u003e\n\u003cli\u003eSecurity Patches\u003c/li\u003e\n\u003cli\u003eImage Upload Fix\u003c/li\u003e\n\u003cli\u003eOption to Disable Swagger\u003c/li\u003e\n\u003cli\u003eCleaner Code\u003c/li\u003e\n\u003cli\u003eActivate / Deactivate Tenants\u003c/li\u003e\n\u003cli\u003eUpgrade Tenant Subscription\u003c/li\u003e\n\u003cli\u003eAdvanced Search\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="001-rc"\u003e0.0.1-rc\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eInitial release\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:7,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/configurations/",title:"Configurations",description:"Understanding Configurations in fullstackhero's Web API.",content:'\u003cp\u003eWithin the Host boot project there is a folder called \u0026ldquo;Configurations\u0026rdquo;. where there are all the configuration files, one for each area.\u003c/p\u003e\n\u003ch2 id="general-structure"\u003eGeneral Structure\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e├── Host.csproj\n│   ├── Configurations\n│   |   ├── cache.json\n│   |   ├── cors.json\n│   |   ├── database.json\n│   |   ├── hangfire.json\n│   |   ├── logger.json\n│   |   ├── mail.json\n│   |   ├── middleware.json\n│   |   ├── security.json\n│   |   └── signalr.json\n|   ├── appsettings.json\n|\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe classic appsettings.json configuration file is still available to manage custom parameters.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe \u003cstrong\u003e\u003ccode\u003eStartup\u003c/code\u003e class\u003c/strong\u003e inside the folder is responsible for loading all the configuration files described above.\u003c/p\u003e\n'}).add({id:8,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/exception-handling/",title:"Exception Handling",description:"Understanding Exception Handling in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:9,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/localization/",title:"Localization",description:"Understanding Localization in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:10,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/application-startup/",title:"Application Startup",description:"Understanding application-startup in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:11,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/caching/",title:"Caching",description:"Understanding Caching in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:12,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/cors/",title:"CORS",description:"Understanding CORS in fullstackhero's Web API.",content:"\u003cp\u003eCORS is an mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own.\u003c/p\u003e\n\u003cp\u003eFullStackHero Web API has support for providing to several clients, all of the configurations related this feature can be found under \u003ccode\u003esrc/Host/Configurations/cors.json\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eWe present two scenarios that demonstrate how Cross-Origin requests by clients can be served:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026quot;CorsSettings\u0026quot;: {\n    \u0026quot;Angular\u0026quot;: \u0026quot;http://localhost:4200\u0026quot;,\n    \u0026quot;Blazor\u0026quot;: \u0026quot;https://localhost:5002;https://www.mydomain.my\u0026quot;\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"}).add({id:13,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/hangfire/",title:"Hangfire",description:"Understanding Hangfire in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:14,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/",title:"Logging",description:"Understanding Logging in fullstackhero's Web API.",content:'\u003cp\u003eFullStackHero Web API has out of the box support for logging to several destinations. Thanks to the usage of Serilog! All of the configurations related to Logging can be found under \u003ccode\u003esrc/Host/Configurations/logger.json\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="console"\u003eConsole\u003c/h2\u003e\n\u003cp\u003eConsole Logging is enabled by Default. This is done directly in the C# code and not in the JSON Configurations. You can find the code snippet at the Host\u0026rsquo;s Program.cs. Package used - \u003ccode\u003eSerilog.Sinks.Console\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebuilder.Host.UseSerilog((_, config) =\u0026gt;\n{\n    config.WriteTo.Console()\n    .ReadFrom.Configuration(builder.Configuration);\n});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHere is how the logs show up on Console via Serilog.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_500x0_resize_q100_lanczos.jpg 500w" width="1289" height="258" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/console-logging_huaed0335094867202bfee7a4f844f185f_150217_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/fundamentals/logging/console-logging.jpg"\n      width="1289" height="258" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch2 id="file"\u003eFile\u003c/h2\u003e\n\u003cp\u003eStructured logging is the best part of using Serilog! It is possible to use JSON formatters to evenly log messages and warning to files in the local directory. Package used - \u003ccode\u003eSerilog.Sinks.File\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026quot;Name\u0026quot;: \u0026quot;File\u0026quot;,\n\u0026quot;Args\u0026quot;: {\n  \u0026quot;path\u0026quot;: \u0026quot;Logs/logs.json\u0026quot;,\n  \u0026quot;formatter\u0026quot;: \u0026quot;Serilog.Formatting.Json.JsonFormatter, Serilog\u0026quot;,\n  \u0026quot;rollingInterval\u0026quot;: \u0026quot;Day\u0026quot;,\n  \u0026quot;restrictedToMinimumLevel\u0026quot;: \u0026quot;Information\u0026quot;,\n  \u0026quot;retainedFileCountLimit\u0026quot;: 5\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe above configurations ensures that the logs are structured and has a new filename every day. Since we do not want to use of a lot of memory to keep these logs, it\u0026rsquo;s configured to keep the logs of the last 5 days only. Feel free to modify this. Also this only logs the messages that has a level of Information or above.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_500x0_resize_q100_lanczos.jpg 500w" width="1848" height="400" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/file-logging_hu88e908a4011519b4b9f9e14a9c8f1712_198841_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/fundamentals/logging/file-logging.jpg"\n      width="1848" height="400" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch2 id="seq"\u003eSEQ\u003c/h2\u003e\n\u003cp\u003eHaving a dashboard to analyze the logs and warning are always good to have. SEQ is one option for that. It collects application logs, filters it as you need, along with several other integrations.\u003c/p\u003e\n\u003cp\u003ePackage used - \u003ccode\u003eSerilog.Sinks.Seq\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMake sure you have SEQ installed and running on your machine / environment. SEQ is free for Individual use. Once setup, point to the SEQ Instance. It usually runs over the \u003ccode\u003e5341\u003c/code\u003e port.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026quot;Name\u0026quot;: \u0026quot;Seq\u0026quot;,\n\u0026quot;Args\u0026quot;: {\n  \u0026quot;serverUrl\u0026quot;: \u0026quot;http://localhost:5341\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_500x0_resize_q100_lanczos.jpg 500w" width="1920" height="961" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging_hu60b4b70a48b92f81cb13e4372c04079b_635300_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/fundamentals/logging/seq-logging.jpg"\n      width="1920" height="961" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch2 id="elastic-search"\u003eElastic Search\u003c/h2\u003e\n\u003cp\u003eNow, the interesting part! Elastic Search with Kibana for Logging. You will need instances of Kibana and ElasticSearch running. To make things simpler, I have included a docker-compose \u003ccode\u003edeployments\\elk\\docker-compose.elk.yml\u003c/code\u003e which has references to both Kibana and ElasticSearch Images of version \u003ccode\u003e7.16.0\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eEnsure that you have Docker installed on your machine along with the Docker Extensions for Visual Code (or your favorite IDE). From VS Code, you can simply right click \u003ccode\u003e\\deployments\\elk\\docker-compose.elk.yml\u003c/code\u003e and click on Docker-Up. This would spin up the Kibana and ES instances for you in no time.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_500x0_resize_q100_lanczos.jpg 500w" width="1270" height="720" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk_hud200d9775f7ecab0de22546564f82d0a_70120_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/fundamentals/logging/docker-elk.jpg"\n      width="1270" height="720" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eBy default,\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKiabana runs on port 5601 - http://localhost:5601\u003c/li\u003e\n\u003cli\u003eElastic Search runs on port 9200 - http://localhost:9200\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePackage used - \u003ccode\u003eSerilog.Sinks.Elasticsearch\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026quot;Name\u0026quot;: \u0026quot;Elasticsearch\u0026quot;,\n\u0026quot;Args\u0026quot;: {\n  \u0026quot;nodeUris\u0026quot;: \u0026quot;http://localhost:9200;\u0026quot;,\n  \u0026quot;indexFormat\u0026quot;: \u0026quot;DN.WebApi-logs-{0:yyyy.MM}\u0026quot;,\n  \u0026quot;numberOfShards\u0026quot;: 2,\n  \u0026quot;numberOfReplicas\u0026quot;: 1,\n  \u0026quot;restrictedToMinimumLevel\u0026quot;: \u0026quot;Information\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can see that we are pointing to port 9200 from our configuration. This instructs Serilog to write the logs to ElasticSearch DB.\u003c/p\u003e\n\u003cp\u003eTo view the logs on Dashboard, navigate to http://localhost:5601\u003c/p\u003e\n\u003cp\u003eFirstly, navigate to Kibana Spaces - http://localhost:5601/app/management/kibana/spaces\u003c/p\u003e\n\u003cp\u003eFrom the sidebar, select Index Patterns and create a new one.\u003c/p\u003e\n\u003cp\u003eIn the Name field - put in \u003ccode\u003edn.webapi-logs*\u003c/code\u003e or whatever you have set in your Serilog Configuration under \u003ccode\u003eindexFormat\u003c/code\u003e. Select the Timestamp field as \u003ccode\u003e@timestamp\u003c/code\u003e. That\u0026rsquo;s it.\u003c/p\u003e\n\u003cp\u003eNow, go to http://localhost:5601/app/discover\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_500x0_resize_q100_lanczos.jpg 500w" width="1920" height="1009" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/logging/kibana_hub8dd9ffe1854b272dacb2cf1a46ee863_607133_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/fundamentals/logging/kibana.jpg"\n      width="1920" height="1009" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n'}).add({id:15,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/mail-service/",title:"Mail Service",description:"Understanding Mail Service in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:16,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/middlewares/",title:"Middlewares",description:"Understanding Middlewares in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:17,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/multitenancy/",title:"Multitenancy",description:"Understanding Multitenancy in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:18,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/security/",title:"Security",description:"Understanding Security in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:19,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/signalr/",title:"SignalR",description:"Understanding SignalR in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:20,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/fundamentals/swagger/",title:"Swagger",description:"Understanding Swagger in fullstackhero's Web API.",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:21,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/database-migrations/",title:"Adding Database Migrations for Entity Framework Core",description:"Adding Database Migrations for Entity Framework Core with fullstackhero's Web API",content:'\u003cp\u003eSo, you have already added new entities into the Domain project, modified an existing entity or want to recreate all the pre-generated migrations? Here is how to proceed.\u003c/p\u003e\n\u003cp\u003eNote that currently, fullstackhero\u0026rsquo;s Web API supports the following major DB Providers,\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMSSQL\u003c/li\u003e\n\u003cli\u003eMySQL\u003c/li\u003e\n\u003cli\u003ePostgreSQL\u003c/li\u003e\n\u003cli\u003eOracle\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo maintain scalability, the database migrations of each of these DB Providers are kept in separate class library projects namely\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMigrators/Migrators.MSSQL\u003c/li\u003e\n\u003cli\u003eMigrators/Migrators.MySQL\u003c/li\u003e\n\u003cli\u003eMigrators/Migrators.PostgreSQL\u003c/li\u003e\n\u003cli\u003eMigrators/Migrators.Oracle\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eOut of the box, the default migrations are already generated and is made available for you. This means you would\u0026rsquo;nt even have to run a \u003ccode\u003eupdate-database\u003c/code\u003e to get started. The Application startup already handles it for you.\u003c/p\u003e\n\u003cp\u003eAs of now, fullstackhero\u0026rsquo;s Web API consists of the following EF Core DB Context classes,\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eApplicationDbContext - This is where you would ideally reference your new entities. By default, Catalog entities are referenced here.\u003c/li\u003e\n\u003cli\u003eTenantDbContext - Related to Finbuckle\u0026rsquo;s Multitenancy setup of Stores.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ewhich are maintained as 2 different sub-folders under each of the Migrator projects named as \u003ccode\u003eApplication\u003c/code\u003e and \u003ccode\u003eTenant\u003c/code\u003e folders.\u003c/p\u003e\n\u003cp\u003eTo start with generating the database migrations, open your terminal on to the Host Project.\u003c/p\u003e\n\u003cp\u003eNote that steps are almost same for all the Database providers. But make sure that you got to have the respective connection string of the Database Provider in the \u003ccode\u003edatabase.json\u003c/code\u003e and \u003ccode\u003ehangfire.json\u003c/code\u003e to continue.\u003c/p\u003e\n\u003cp\u003eMeaning, if you intend to create / update migrations for MySQL,\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou have to ensure that you have the MySQL Server up and running on your development machine.\u003c/li\u003e\n\u003cli\u003eYou have a valid connection string to the MySQL Server updated on both the \u003ccode\u003edatabase.json\u003c/code\u003e and \u003ccode\u003ehangfire.json\u003c/code\u003e configuration files. This also assumes that you have updated \u003ccode\u003e\u0026quot;DBProvider\u0026quot;: \u0026quot;mysql\u0026quot;\u003c/code\u003e too.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBelow are some sample configurations for MySQL Provider. The above is applicable to all the other DB Provider.\u003c/p\u003e\n\u003ch4 id="databasejson"\u003edatabase.json\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026quot;DatabaseSettings\u0026quot;: {\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;server=localhost;uid=root;pwd=root;database=defaultRootDb;Allow User Variables=True\u0026quot;,\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;mysql\u0026quot;\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="hangfirejson"\u003ehangfire.json\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e...\n\u0026quot;Storage\u0026quot;: {\n  \u0026quot;StorageProvider\u0026quot;: \u0026quot;mysql\u0026quot;,\n  \u0026quot;ConnectionString\u0026quot;: \u0026quot;server=localhost;uid=root;pwd=root;database=defaultRootDb;Allow User Variables=True\u0026quot;,\n...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe Provider values for other supported DBs are as follows.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMSSQL - \u003cstrong\u003emssql\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003ePostgreSQL - \u003cstrong\u003epostgresql\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eOracle - \u003cstrong\u003eoracle\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOnce your connection strings are all updated in the mentioned configuration files, open up the command terminal on the Host Project\u0026rsquo;s directory and run the following commands.\u003c/p\u003e\n\u003cp\u003eAs mentioned earlier, since we have 2 Db Contexts defined in our application, we will have seperate commands for each of the available context classes.\u003c/p\u003e\n\u003cp\u003eThe generic command to add migrations over the \u003cstrong\u003eApplication Db Contex\u003c/strong\u003et goes like this,\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003edotnet ef migrations add \u0026lt;CommitMessage\u0026gt; --project .././Migrators/Migrators.\u0026lt;DBProvider\u0026gt;/ --context ApplicationDbContext -o Migrations/Application\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhere\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;CommitMessage\u0026gt;\u003c/code\u003e should be replaced by an appropriate name that describes the Migration\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;DBProvider\u0026gt;\u003c/code\u003e should be replaced by your selected Database Provider (\u003ccode\u003eMSSQL\u003c/code\u003e, \u003ccode\u003eMySQL\u003c/code\u003e, \u003ccode\u003eOracle\u003c/code\u003e or \u003ccode\u003ePostgreSQL\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe generic command to add migrations over the \u003cstrong\u003eTenant Db Context\u003c/strong\u003e goes like this,\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003edotnet ef migrations add \u0026lt;CommitMessage\u0026gt; --project .././Migrators/Migrators.\u0026lt;DBProvider\u0026gt;/ --context TenantDbContext -o Migrations/Tenant\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhere\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;CommitMessage\u0026gt;\u003c/code\u003e should be replaced by an appropriate name that describes the Migration\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;DBProvider\u0026gt;\u003c/code\u003e should be replaced by your selected Database Provider (\u003ccode\u003eMSSQL\u003c/code\u003e, \u003ccode\u003eMySQL\u003c/code\u003e, \u003ccode\u003eOracle\u003c/code\u003e or \u003ccode\u003ePostgreSQL\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKeeping that in mind, here is how you would add Migrations for MySQL.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eEnsure that you have updated the connection string and dbProvider properties of both hangfire.json and database.json configuration files.\u003c/li\u003e\n\u003cli\u003eOpen up the command terminal on the Host Project\u0026rsquo;s directory.\u003c/li\u003e\n\u003cli\u003eTo add migrations related to ApplicationDbContext, run\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003edotnet ef migrations add AddedMenuEntity --project .././Migrators/Migrators.MySQL/ --context ApplicationDbContext -o Migrations/Application\u003c/code\u003e\u003c/p\u003e\n\u003col start="4"\u003e\n\u003cli\u003eTo add migrations related to TenantDbContext, run\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003edotnet ef migrations add ModifiedTenantTable --project .././Migrators/Migrators.MySQL/ --context TenantDbContext -o Migrations/Tenant\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s almost it. Once the process is completed you would new Migration cs files that represent your new additions / modifications at the table level.\u003c/p\u003e\n\u003cp\u003eNote - To regenerate all the existing migrations in a clean way, Delete the sub-folders (Application and Tenant) under the concerned DBProvider\u0026rsquo;s Migrator project.\u003c/p\u003e\n\u003cp\u003eYou do not have to do anything extra to apply the migrations to your database. The application does it for you during the startup. Cheers!\u003c/p\u003e\n'}).add({id:22,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/crud-guide/",title:"Performing CRUD Operations",description:"Performing CRUD Operations with fullstackhero's Web API",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:23,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/",title:"Setting up Azure AD Authentication",description:"Setting up Azure AD Authentication with fullstackhero's Web API",content:'\u003cp\u003eFor the Azure AD integration to work with this template, you have to create 2 \u003ccode\u003eApp Registrations\u003c/code\u003e under your Azure AD tenant with the right settings, and then fill out the \u003ccode\u003eAzureAd\u003c/code\u003e section in \u003ccode\u003eConfigurations/security.json\u003c/code\u003e to hook those apps up. This guide will walk you through doing all that.\u003c/p\u003e\n\u003ch2 id="create-the-fshapi-application-registration"\u003eCreate the FSHApi Application Registration\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eLog into the azure portal and go to the \u003ca href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade"\u003eAzure Active Directory blade\u003c/a\u003e. Make sure you are in the directory where you want your apps to be registered. You can switch directories by clicking on your account info in the top right corner.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUnder \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eApp registrations\u003c/code\u003e, and click the \u003ccode\u003eNew registration\u003c/code\u003e button on top:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_500x0_resize_lanczos_3.png 500w" width="906" height="595" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration_hufab59fda526ebd0068b3059bb1e970fb_46177_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/new-registration.png"\n      width="906" height="595" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFill in \u003ccode\u003eFSHApi\u003c/code\u003e (or whichever name you want for this app) as \u003ccode\u003eName\u003c/code\u003e. Under \u003ccode\u003eSupported account types\u003c/code\u003e select \u003ccode\u003eAccounts in any organizational directory - Multitenant\u003c/code\u003e and click on \u003ccode\u003eRegister\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_500x0_resize_lanczos_3.png 500w" width="845" height="566" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api.png"\n      width="845" height="566" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="expose-the-api"\u003eExpose the Api\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOn the newly created App\u0026rsquo;s blade, under \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eExpose an API\u003c/code\u003e, then click on \u003ccode\u003eAdd a scope\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_500x0_resize_lanczos_3.png 500w" width="890" height="568" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1_hu802e1da739294b48e8662efd5630fed6_38390_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-1.png"\n      width="890" height="568" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAn \u003ccode\u003eApplication ID URI\u003c/code\u003eq will automatically be filled out. Click on \u003ccode\u003eSave and continue\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_500x0_resize_lanczos_3.png 500w" width="580" height="284" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2_hud2b1b880fd5c0454afd53a55d6c1e11c_11182_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-2.png"\n      width="580" height="284" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOn the next screen, fill in \u003ccode\u003eaccess_as_user\u003c/code\u003e as \u003ccode\u003eScope name\u003c/code\u003e, select \u003ccode\u003eAdmins and users\u003c/code\u003e as \u003ccode\u003eWho can consent?\u003c/code\u003e and fill out the display names and descriptions like in the screenshot below, then click on \u003ccode\u003eAdd scope\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_500x0_resize_lanczos_3.png 500w" width="577" height="670" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3_hua3fea6d7066e01b6afd2485087512915_22548_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-scope-3.png"\n      width="577" height="670" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="add-app-roles"\u003eAdd App roles\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eUnder \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eApp roles\u003c/code\u003e and click the \u003ccode\u003eCreate app role\u003c/code\u003e button on top:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_500x0_resize_lanczos_3.png 500w" width="899" height="505" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1_hu6513f0c8ba2e0c6aff6e02cfa16f5f76_27706_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-1.png"\n      width="899" height="505" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFill in \u003ccode\u003eAdministrators\u003c/code\u003e as Display name and \u003ccode\u003eAdmin\u003c/code\u003e as value. Especially the value is important, as this has to match the name of the role in the FSH application itself. Click on Apply:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_500x0_resize_lanczos_3.png 500w" width="584" height="568" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2_hud55b01dae692884065a2503a1c2de549_16291_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/create-app-role-2.png"\n      width="584" height="568" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the same way, create app roles for the other roles in your application (by default the only other role is the \u003ccode\u003eBasic\u003c/code\u003e role).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="assign-app-roles-to-specific-users-in-azuread"\u003eAssign App roles to specific users in AzureAD\u003c/h2\u003e\n\u003cp\u003eYou will have to assign those freshly created App roles to the AzureAd users to which you want to grant access to your application:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOn the \u003ca href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade"\u003eAzure Active Directory blade\u003c/a\u003e, under \u003ccode\u003eManage\u003c/code\u003e click on \u003ccode\u003eEnterprise applications\u003c/code\u003e and select the FSHApi application:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_500x0_resize_lanczos_3.png 500w" width="936" height="586" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1_hu6885f31c7964f0fdf1e873cb9677ad5d_43328_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-1.png"\n      width="936" height="586" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUnder \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eUsers and groups\u003c/code\u003e and click the \u003ccode\u003eAdd user/group\u003c/code\u003e button on top:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_500x0_resize_lanczos_3.png 500w" width="949" height="372" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2_hu5c60cd8225cab4ddf52eeef82d4311e9_26128_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/assign-app-roles-2.png"\n      width="949" height="372" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOn the next screen, you can select one or more users/groups, select an App role and click on the \u003ccode\u003eAssign\u003c/code\u003e button to assign the role the the specified users/groups.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="create-the-client-application-registration"\u003eCreate the Client Application Registration\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGo back again to the \u003ca href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade"\u003eAzure Active Directory blade\u003c/a\u003e and under \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eApp registrations\u003c/code\u003e, and click the \u003ccode\u003eNew registration\u003c/code\u003e button on top again.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThis time, fill out \u003ccode\u003eFSHClient\u003c/code\u003e as Name, choose again for \u003ccode\u003eAccounts in any organizational directory - Multitenant\u003c/code\u003e and under \u003ccode\u003eRedirect URI\u003c/code\u003e, select \u003ccode\u003eSingle-page application (SPA)\u003c/code\u003e and fill out the url \u003ccode\u003ehttps://localhost:5001/swagger/oauth2-redirect.html\u003c/code\u003e. Click on \u003ccode\u003eRegister\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_500x0_resize_lanczos_3.png 500w" width="845" height="566" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api_huba62a80f5866c3c5b151606978986318_23568_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/register-api.png"\n      width="845" height="566" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="add-permission-for-the-api"\u003eAdd permission for the Api\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOn the newly created App\u0026rsquo;s blade, under \u003ccode\u003eManage\u003c/code\u003e, click on \u003ccode\u003eAPI permissions\u003c/code\u003e and click the \u003ccode\u003eAdd a permission\u003c/code\u003e button:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_500x0_resize_lanczos_3.png 500w" width="853" height="505" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1_huf5ede30cd27b35b526e6f408879be87c_37110_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-1.png"\n      width="853" height="505" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOn the next view, under \u003ccode\u003eSelect an API\u003c/code\u003e, click on \u003ccode\u003eMy APIs\u003c/code\u003e and select FSHApi:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_500x0_resize_lanczos_3.png 500w" width="857" height="269" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2_hu232695f53cd07a72c58a87c2b951d412_12024_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-2.png"\n      width="857" height="269" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThen, under \u003ccode\u003eSelect permissions\u003c/code\u003e, check the \u003ccode\u003eaccess_as_user\u003c/code\u003e permission and click on \u003ccode\u003eAdd permissions\u003c/code\u003e:\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_20x0_resize_lanczos_3.png"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_500x0_resize_lanczos_3.png 500w" width="838" height="445" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_900x0_resize_lanczos_3.png 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_800x0_resize_lanczos_3.png 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_700x0_resize_lanczos_3.png 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_600x0_resize_lanczos_3.png 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3_hu1c11613c3945c17016838b1d67dcadcb_17877_500x0_resize_lanczos_3.png 500w" src="/dotnet-webapi-boilerplate/tutorials/azure-ad-guide/add-permission-3.png"\n      width="838" height="445" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="add-blazor-client-application"\u003eAdd Blazor Client application\u003c/h3\u003e\n\u003cp\u003eThis should be enough for testing from swagger. But you\u0026rsquo;ll probably will want to use the client application as well. There\u0026rsquo;s 2 options here. Or you can add the \u003ccode\u003eRedirect URI\u003c/code\u003e for the client application to the same App registration you just created (click on \u003ccode\u003eAuthentication\u003c/code\u003e under \u003ccode\u003eManage\u003c/code\u003e and then on \u003ccode\u003eAdd URI\u003c/code\u003e), or you can create a whole new client app registration specifically for this client, just like described in the steps above, but with another \u003ccode\u003eRedirect URI\u003c/code\u003e. In any case, the \u003ccode\u003eRedirect URI\u003c/code\u003e for the blazor app you will want to use is \u003ccode\u003ehttps://localhost:5002/authentication/login-callback\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="update-the-azuread-settings-on-the-web-api-project"\u003eUpdate the AzureAd settings on the Web Api project\u003c/h2\u003e\n\u003cp\u003eNow that\u0026rsquo;s all set up, the only thing left is updating the configuration to use AzureAd.\nOn the Web API project, under \u003ccode\u003esrc\\Host\\Configurations\u003c/code\u003e, open \u003ccode\u003esecurity.json\u003c/code\u003e and fill out the required settings:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eProvider\u003c/code\u003e: set to \u003ccode\u003eAzureAd\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eInstance\u003c/code\u003e: set to \u003ccode\u003ehttps://login.microsoftonline.com/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDomain\u003c/code\u003e: you can find your domain in the Azure Active Directory blade on the \u003ccode\u003eOverview\u003c/code\u003e page under \u003ccode\u003ePrimary domain\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eTenantId\u003c/code\u003e: set to \u003ccode\u003eorganizations\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eClientId\u003c/code\u003e: set to the \u003ccode\u003eApplication (client) ID\u003c/code\u003e of the FSHApi App registration (you can find this on the \u003ccode\u003eOverview\u003c/code\u003e page of the App registration in Azure)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eScopes\u003c/code\u003e: set to \u003ccode\u003eaccess_as_user\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRootIssuer\u003c/code\u003e: set to \u003ccode\u003ehttps://sts.windows.net/\u0026lt;Your Tenant ID\u0026gt;/\u003c/code\u003e (your \u003ccode\u003eTenant ID\u003c/code\u003e is also on the \u003ccode\u003eOverview\u003c/code\u003e page of the Azure Active Directory blade)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThen for swagger to work you need the following settings under the \u003ccode\u003eSwagger\u003c/code\u003e node in \u003ccode\u003esecurity.json\u003c/code\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAuthorizationUrl\u003c/code\u003e: set to \u003ccode\u003ehttps://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eTokenUrl\u003c/code\u003e: set to \u003ccode\u003ehttps://login.microsoftonline.com/organizations/oauth2/v2.0/token\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eApiScope\u003c/code\u003e: set to the full name of the api scope we created in the FSHApi App registration above (\u003ccode\u003eapi://\u0026lt;ClientId of the FSHApi App registration\u0026gt;/access_as_user\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eOpenIdClientId\u003c/code\u003e: set to the \u003ccode\u003eApplication (client) ID\u003c/code\u003e of the FSHClient App registration (or the one you specifically created for swagger).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="update-the-azuread-settings-on-the-blazor-client-project"\u003eUpdate the AzureAd settings on the Blazor Client project\u003c/h2\u003e\n\u003cp\u003eThen for the blazor client to work, you need the following settings over there in the \u003ccode\u003ewwwroot/appsettings.json\u003c/code\u003e file:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAuthProvider\u003c/code\u003e: set to \u003ccode\u003eAzureAd\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eAuthority\u003c/code\u003e: set to \u003ccode\u003ehttps://login.microsoftonline.com/organizations\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eClientId\u003c/code\u003e: set to the \u003ccode\u003eApplication (client) ID\u003c/code\u003e of the FSHClient App registration (or the one you specifically created for the blazor client).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eValidateAuthority\u003c/code\u003e: set to \u003ccode\u003etrue\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eApiScope\u003c/code\u003e: set to the full name of the api scope we created in the FSHApi App registration (\u003ccode\u003eapi://\u0026lt;ClientId of the FSHApi App registration\u0026gt;/access_as_user\u003c/code\u003e) same as before with the swagger client.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="configuration-for-postman"\u003eConfiguration for Postman\u003c/h2\u003e\n\u003cp\u003eTODO - Coming soon\u003c/p\u003e\n\u003ch2 id="test-it-out"\u003eTest it out\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eStart the Web API project and browse to \u003ccode\u003ehttps://localhost:5001/swagger\u003c/code\u003e when you click on the \u003ccode\u003eAuthorize\u003c/code\u003e button on the top right, you should be redirected to the Microsoft login site. Log in with a user to which you granted app roles and you should be redirected back to swagger with the padlock closed. When you now issue an api call, the Authorization header should be sent with the bearer token received from AzureAd.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eStart the Blazor Client project and browse to \u003ccode\u003ehttps://localhost:5002/\u003c/code\u003e. You should be immediately redirected to the Microsoft login site. And after logging in, you should be redirected back to the homepage of the blazor client.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="azuread-and-multitenancy"\u003eAzureAd and multitenancy\u003c/h2\u003e\n\u003cp\u003eAbout the \u003ccode\u003eRootIssuer\u003c/code\u003esetting in \u003ccode\u003esecurity.json\u003c/code\u003e. This should be set to the issuer of the root tenant in AzureAd. When someone is logging in from that AzureAD tenant, the local root tenant will automatically be selected.\u003c/p\u003e\n\u003cp\u003eFor the other tenants there\u0026rsquo;s an \u0026ldquo;issuer\u0026rdquo; field in the tenants table to map those. There\u0026rsquo;s still a part which has to be implemented for mutltiple tenants from AzureAd though, as there needs to be some kind of \u0026ldquo;onboarding\u0026rdquo; experience inside AzureAD when a new tenant needs access to you application. See \u003ca href="https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/signup"\u003ehttps://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/signup\u003c/a\u003e for more info about this.\u003c/p\u003e\n\u003ch2 id="azuread-usersroles-vs-local-usersroles"\u003eAzureAd users/roles vs. local users/roles\u003c/h2\u003e\n\u003cp\u003eIn any case, with AzureAd, when a user logs in and there doesn\u0026rsquo;t exist a local user yet in the local tenant for that AzureAd user/tenant, one gets created automatically. It will also immediately have the same roles assigned like the ones in AzureAd. When an already existing user logs in and there are roles in AzureAd for that user which are not yet assigned to the local user, they will automatically be assigned. Currently there will never be any roles removed from a user. So removing the role assignment from AzureAd will not automatically remove it from the local user when he logs in. This to allow for people to use the role/permission management inside the app without having to do it in Azure.\u003c/p\u003e\n'}).add({id:24,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/tutorials/deploying-to-iis/",title:"Deploying to IIS",description:"Deploying fullstackhero's Web API to IIS",content:"\u003cp\u003eDocumentation Coming Soon!\u003c/p\u003e\n"}).add({id:25,href:"https://fullstackhero.net/blog/say-hello-to-fullstackhero/",title:"Say hello to fullstackhero 👋",description:".NET WebAPI Boilerplate Template built with .NET 6.0. Incorporates the most essential Packages your projects will ever need. Follows Clean Architecture Principles.",content:""}),userinput.addEventListener('input',b,!0),suggestions.addEventListener('click',c,!0);function b(){var d,e;const c=5;d=this.value,e=a.search(d,{limit:c,enrich:!0}),suggestions.classList.remove('d-none'),suggestions.innerHTML="";const b={};e.forEach(a=>{a.result.forEach(a=>{b[a.doc.href]=a.doc})});for(const d in b){const e=b[d],a=document.createElement('div');if(a.innerHTML='<a href><span></span><span></span></a>',a.querySelector('a').href=d,a.querySelector('span:first-child').textContent=e.title,a.querySelector('span:nth-child(2)').textContent=e.description,suggestions.appendChild(a),suggestions.childElementCount==c)break}}function c(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()