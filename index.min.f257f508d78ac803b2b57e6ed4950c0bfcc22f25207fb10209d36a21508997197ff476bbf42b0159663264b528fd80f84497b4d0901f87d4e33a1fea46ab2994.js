var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/",title:"Overview",description:".NET WebAPI Boilerplate Template built with .NET 6.0. Incorporates the most essential Packages your projects will ever need. Follows Clean Architecture Principles.",content:'\u003ch2 id="about"\u003eAbout\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003edotnet-webapi-boilerplate\u003c/code\u003e is the integral part of the \u003ccode\u003efullstackhero\u003c/code\u003e project.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efullstackhero\u003c/code\u003e is a venture to develop industry leading boilerplate templates for the dotnet stack as the backend (Web API) along with modern client frameworks like Angular, MVC and Blazor.\u003c/p\u003e\n\u003cp\u003eThis repository contains the WebApi Project of \u003ccode\u003efullstackhero\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="release-planning"\u003eRelease Planning\u003c/h2\u003e\n\u003ch3 id="001-rc-is-available-now"\u003e0.0.1 RC is available now!\u003c/h3\u003e\n\u003cp\u003eThis is the first pre-release version of the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e package. Newer versions will be available on a weekly basis with newer updates and patches. \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/"\u003eRead the getting-started guide for more.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe Release Version is expected to be out by November, 2021 as soon as .NET 6 LTS is launched by Microsoft. Preview versions of this project is available for Initial Developer Testing.\u003c/p\u003e\n\u003ch2 id="important-links--documentations"\u003eImportant Links \u0026amp; Documentations\u003c/h2\u003e\n\u003cp\u003e[Documentation] Overview - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/"\u003eRead\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[Documentation] Getting Started - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/"\u003eRead\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[Documentation] Development Environment - \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/"\u003eLearn about setting up the DEV environment\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eTrack Progress - \u003ca href="https://github.com/fullstackhero/dotnet-webapi-boilerplate/milestone/1"\u003eRelease 1.0 Milestones\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eParticipate in Discussions - \u003ca href="https://github.com/fullstackhero/dotnet-webapi-boilerplate/discussions"\u003eQNA \u0026amp; General Discussions\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eJoin our Discord - \u003ca href="https://discord.gg/gdgHRt4mMw"\u003efullstackhero @ Discord\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="features"\u003eFeatures\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Built on .NET 6.0\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Follows Clean Architecture Principles\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Completely Documented at \u003ca href="https://fullstackhero.net"\u003efullstackhero.net\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Multi Tenancy Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Supports MySQL, MSSQL \u0026amp; PostgreSQL!\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Uses Entity Framework Core as DB Abstraction\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Flexible Repository Pattern\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Dapper Integration for Optimal Performance\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Serilog Integration\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Swagger Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Mapster\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e API Versioning\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Response Caching - Distributed Caching\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Fluent Validations\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Audit Logging\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Advanced User \u0026amp; Role Based Permission Management\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Code Analysis \u0026amp; StyleCop Integration with Rulesets\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e JSON Based Localization with Caching\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e Hangfire Support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked="" disabled="" type="checkbox"\u003e File Storage Service\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e Test Projects\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled="" type="checkbox"\u003e \u0026amp; Much More\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="prerequisites"\u003ePrerequisites\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eVisual Code v1.59.xx or higher / Visual Studio 2022 Preview (17.0.0 Preview 4.0) or Higher.\u003c/li\u003e\n\u003cli\u003edotnet-sdk-6.0.100-rc.1.21458.32 or higher.\u003c/li\u003e\n\u003cli\u003ePostgreSQL / MSSQL / MySQL Database Server instances.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFor more details, read \u003ca href="https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/"\u003eDevelopment Environment\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="community"\u003eCommunity\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDiscord \u003ca href="https://discord.gg/gdgHRt4mMw"\u003e@fullstackhero\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="license"\u003eLicense\u003c/h2\u003e\n\u003cp\u003eThis project is licensed with the \u003ca href="LICENSE"\u003eMIT license\u003c/a\u003e.\u003c/p\u003e\n'}).add({id:1,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/",title:"Development Environment",description:"Setting up the Development Environment for the .NET WebApi Boilerplate",content:'\u003cp\u003efullstackhero\u0026rsquo;s \u003cstrong\u003e.NET WebApi Boilerplate\u003c/strong\u003e Project Development needs you to have the following applications / tools available on your machine. Please Note that this project is being built on a Windows 10 Machine using Visual Code IDE.\u003c/p\u003e\n\u003ch2 id="net-sdk"\u003e.NET SDK\u003c/h2\u003e\n\u003cp\u003eAs mentioned earlier, this project is built with the latest available .NET SDK, which is .NET 6.0. Since the SDK is currently at preview, the project will be released by Mid-November as soon as Microsoft launches .NET 6.0 LTS SDK. But that doesnt stop you from testing out the application!\u003c/p\u003e\n\u003cp\u003eEnsure that you have the latest version of the SDK available - \u003ca href="https://dotnet.microsoft.com/download/dotnet/6.0"\u003eDownload from Microsoft\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eNote : At the time of compiling this documentation, the latest version available was dotnet-sdk-6.0.100-rc.1.21458.32 \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="ide"\u003eIDE\u003c/h2\u003e\n\u003cp\u003eVisual Code IDE is the recommended IDE to use for fullstackhero\u0026rsquo;s .NET WebApi Boilerplate Project Development. If you are not already using this IDE, consider switching to it. It\u0026rsquo;s definitely worth it! (\u003cem\u003eFun Fact : I recently switched from Visual Studio 2019 Community to Visual Code and it\u0026rsquo;s been awesome!\u003c/em\u003e)\u003c/p\u003e\n\u003cp\u003eHowever, you are always free to use your choice of IDEs as well.\u003c/p\u003e\n\u003cp\u003eIncase you intend to use Visual Code for development, here are a bunch of helpful extensions that I use:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEditorConfig for VS Code\u003c/li\u003e\n\u003cli\u003eC#\u003c/li\u003e\n\u003cli\u003eC# Extensions\u003c/li\u003e\n\u003cli\u003eDocker\u003c/li\u003e\n\u003cli\u003eMarkdown All in One\u003c/li\u003e\n\u003cli\u003eNuGet Gallery\u003c/li\u003e\n\u003cli\u003eMaterial Icon Theme\u003c/li\u003e\n\u003cli\u003eREST Client\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eNote : All the screenshots included in these documentations are from Visual Code Point of View. \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="database-servers"\u003eDatabase Servers\u003c/h2\u003e\n\u003cp\u003efullstackhero\u0026rsquo;s .NET WebApi Boilerplate gives you the freedom to choose between the following 3 popular Database Providers. Please note that with the current architecture of the API Project, it would rather be easy to add in support for more DB Providers with minimal change of code. But as of now, here are the 3 Supported Database Providers! By default, MSSQL is chosen as the Database Provider.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e\u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eMake sure that you have atleast one of these servers installed, alongwith a Database Managment tool like Azure Data Studio / PostgreSQL pgAdmin / MySQL Workbench  \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch3 id="mssql"\u003eMSSQL\u003c/h3\u003e\n\u003cp\u003eThere are high chances that you already have this installed on your machine. This is ideal for development and production for small-mid server applications.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCheck out the Community versions of this Server - \u003ca href="https://www.microsoft.com/en-in/sql-server/sql-server-downloads"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload SQL Server Management Studio (SSMS) - \u003ca href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload Azure Data Studio to browse your MSSQL Databases - \u003ca href="https://docs.microsoft.com/en-us/sql/azure-data-studio/download-azure-data-studio"\u003eGet from Microsoft\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="mysql"\u003eMySQL\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCheck out the Community versions of this Server - \u003ca href="https://dev.mysql.com/downloads/mysql/"\u003eGet from mysql\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload MySQL Workbench - \u003ca href="https://dev.mysql.com/downloads/workbench/"\u003eGet from mysql\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="postgresql"\u003ePostgreSQL\u003c/h3\u003e\n\u003cp\u003eProbably the best Open Source Database Server with lots of Enterprise level features.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload postgresql Installer - \u003ca href="https://www.postgresql.org/download/"\u003eGet from postgresql.org\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="api-testing"\u003eAPI Testing\u003c/h2\u003e\n\u003cp\u003eWhen it comes to API Testing, Postman is the recommended tool. I have made sure to include a Postman Collection within the Repository under \u003cstrong\u003e/postman\u003c/strong\u003e folder to make sure you can test out all the existing endpoints. Note that there will be a detailed guide on how to use the given Postman Collection.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload Postman - \u003ca href="https://www.postman.com/downloads/"\u003eGet from postman.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="community-tools"\u003eCommunity Tools\u003c/h2\u003e\n\u003ch2 id="optionals"\u003eOptionals\u003c/h2\u003e\n\u003ch3 id="docker"\u003eDocker\u003c/h3\u003e\n'}).add({id:2,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/",title:"Getting Started",description:"Let's get started with the .NET WebApi Boilerplate!",content:'\u003cp\u003eTo start using fullstackhero .NET WebAPI Boilerplate, there are a couple of options.\u003c/p\u003e\n\u003cp\u003eBut before that, make sure that you have already setup your development environment that runs the prerequisite tools and SDKs. Refer \u003ca href="/dotnet-webapi-boilerplate/general/development-environment/"\u003eDevelopment Environment\u003c/a\u003e for details.\u003c/p\u003e\n\u003cp\u003eThis guide will take you right from installing the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e package to testing the API using the provided Postman Collection!\u003c/p\u003e\n\u003ch2 id="installing-nuget-package"\u003eInstalling NuGet Package\u003c/h2\u003e\n\u003cp\u003eThis is by far the easiest and the most streamlined way of getting the latest available release version of fullstackhero .NET WebApi Boilerplate.\u003c/p\u003e\n\u003cp\u003eOpen up your Command Prompt / Powershell and run the following command to install the solution template.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new --install FullStackHero.WebAPI.Boilerplate::0.0.1-rc\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero_hu8703cf5aa60831b2fbe6ec4c79d88ff8_100371_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/install-fullstackhero.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eThis would install the \u003ccode\u003efullstackhero .NET WebAPI Boilerplate\u003c/code\u003e template globally on your machine. Do note that, at the time of writing this documentation, the latest available version is \u003cstrong\u003e0.0.1-rc\u003c/strong\u003e which is also the first pre-release version of the package. It is highly likely that there is already a newer version available when you are reading this.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eTo get the latest version of the package, visit \u003ca href="https://www.nuget.org/packages/FullStackHero.WebAPI.Boilerplate"\u003eNuGet.org\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e\u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eFullStackHero.WebAPI.Boilerplate is now in pre-release state. You can find the latest version on NuGet.org \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="creating-your-first-solution"\u003eCreating your First Solution\u003c/h2\u003e\n\u003cp\u003eNow that you have installed the template locally on your machine, let\u0026rsquo;s see how you can start generating complete .NET WebAPI Solutions seamlessly.\u003c/p\u003e\n\u003cp\u003eSimply navigate to a new directory (wherever you want to place your new solution at), and open up Command Prompt at the opened directory.\u003c/p\u003e\n\u003cp\u003eRun the following command. Note that, in this demonstration I am naming my new solution as \u003ccode\u003eFSH.Starter\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003edotnet new fsh-api -o FSH.Starter\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/generate-solution_hu8703cf5aa60831b2fbe6ec4c79d88ff8_65571_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/generate-solution.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eOnce that is done, your new solution is created for you. As simple as that!\u003c/p\u003e\n\u003cp\u003eHere are the folders and files created for you.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_500x0_resize_q100_lanczos.jpg 500w" width="649" height="431" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/folder-structure_hu4cceadc9821d990a30dacd2bf2c0bced_150942_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/folder-structure.jpg"\n      width="649" height="431" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003ch2 id="running-the-application"\u003eRunning the Application\u003c/h2\u003e\n\u003cp\u003eNext, open up command prompt on this directory and run the following.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003ecode .\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis opens up the solution via Visual Code. Make sure that you have the prerequisite tools and SDKs setup.\u003c/p\u003e\n\u003ch3 id="setting-up-the-connection-string"\u003eSetting up the Connection String\u003c/h3\u003e\n\u003cp\u003eNext, let\u0026rsquo;s set up some valid connection strings. Navigate to \u003ccode\u003esrc/Bootstrapper/\u003c/code\u003e and open up \u003ccode\u003eappSettings.json\u003c/code\u003e. Here you would have to provide a valid connection string under the \u003ccode\u003eMultitenancySettings\u003c/code\u003e to either MSSQL,  MySQL or PostgreSQL instance. Below are some sample settings for each of the DB Providers.\u003c/p\u003e\n\u003cp\u003eDetails on the usage of other Settings will be explained in the upcoming documentations.\u003c/p\u003e\n\u003ch4 id="mysql"\u003eMySQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;MultitenancySettings\u0026quot;: {\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;server=localhost;uid=root;pwd=root;database=defaultRootDb;Allow User Variables=True\u0026quot;,\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;mysql\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="mssql"\u003eMSSQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;MultitenancySettings\u0026quot;: {\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;mssql\u0026quot;,\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;Data Source=(localdb)\\\\mssqllocaldb;Initial Catalog=rootTenantDb;Integrated Security=True;MultipleActiveResultSets=True\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="postgresql"\u003ePostgreSQL\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e\u0026quot;MultitenancySettings\u0026quot;: {\n    \u0026quot;ConnectionString\u0026quot;: \u0026quot;Host=localhost;Database=rootTenantDb;Username=postgres;Password=root;Include Error Detail=true\u0026quot;,\n    \u0026quot;DBProvider\u0026quot;: \u0026quot;postgresql\u0026quot;\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow you need to navigate to the \u003ccode\u003eBootstrapper (API) Project\u003c/code\u003e directory via CMD or VSCode\u0026rsquo;s native terminal and run the basic build and run command to get the API up and running. Run the following.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e cd src/Bootstrapper\n dotnet build\n dotnet run\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_500x0_resize_q100_lanczos.jpg 500w" width="1113" height="622" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/running-api_hu8703cf5aa60831b2fbe6ec4c79d88ff8_411258_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/running-api.jpg"\n      width="1113" height="622" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eAs you can see from the logs, a couple of operations happen as soon as you launch the application. Let me give a brief idea on what happens when you run the application for the very first time.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe Migrations that already come out-of-the-box with the application gets applied. Note that you do not have to update the database.\u003c/li\u003e\n\u003cli\u003eThe Application is programmed to seed a default Tenant named \u003ccode\u003eroot\u003c/code\u003e, that is basically the super-admin of the entire application and has permissions to manage tenants.\u003c/li\u003e\n\u003cli\u003eOnce Tenant record is seeded, the tenant admin , roles and permissions are also seeded. Note that the default credentials for the root tenant admin is as follows.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003e{\n    \u0026quot;email\u0026quot;:\u0026quot;admin@root.com\u0026quot;,\n    \u0026quot;password\u0026quot;:\u0026quot;123Pa$$word!\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eThe Connection String that you provided in the appSettings will be taken as the \u003ccode\u003eroot\u003c/code\u003e Tenant\u0026rsquo;s Connection. Note that all the tenant data will be stored on to this connection under the Tenants table.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="testing-the-postman-collection"\u003eTesting the Postman Collection\u003c/h2\u003e\n\u003cp\u003eNow that our application is up and running, let\u0026rsquo;s fire up POSTMAN and run some basic requests. You can find the updated Postman collection under the /postman folder of your solution. Import this postman collection on to your local Postman.\u003c/p\u003e\n\u003cp\u003eNote that I have set up some default collection variables to make things easier.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_500x0_resize_q100_lanczos.jpg 500w" width="1126" height="344" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/postman-collection_hu29a15930ed4ac3891da76967d08fbf44_99838_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/postman-collection.jpg"\n      width="1126" height="344" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eIncase your application happens to start on a different Port, you would have to change the \u003ccode\u003eurl\u003c/code\u003e variable on this collection and save it.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s start by generating a token for the \u003ccode\u003eroot admin\u003c/code\u003e user! Navigate to the Identity/get-token request and simply run it. If everything goes as expected, you would be seeing a valid token as your response.\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class="doc-img lazyload" src="/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_20x0_resize_q100_lanczos.jpg"\n    data-srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_500x0_resize_q100_lanczos.jpg 500w" width="1780" height="677" \u003e\n  \u003cnoscript\u003e\u003cimg class="doc-img img-fluid" srcset="https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_900x0_resize_q100_lanczos.jpg 900w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_800x0_resize_q100_lanczos.jpg 800w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_700x0_resize_q100_lanczos.jpg 700w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_600x0_resize_q100_lanczos.jpg 600w,https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/token-response_hud2a3c0ef311657ebcb1ca1688ae766fe_350593_500x0_resize_q100_lanczos.jpg 500w" src="/dotnet-webapi-boilerplate/general/getting-started/token-response.jpg"\n      width="1780" height="677" \u003e\u003c/noscript\u003e\n  \n  \u003c/figure\u003e\n\n\u003cp\u003eSo,whenever a valid token is generated via Postman, it is stored as a variable of the collection and is used by default for all the subsequent requests via Postman until the token expires.\u003c/p\u003e\n'}).add({id:3,href:"https://fullstackhero.net/dotnet-webapi-boilerplate/general/solution-structure/",title:"Solution Structure",description:"Here is how the .NET WebApi Boilerplate is structured.",content:""}).add({id:4,href:"https://fullstackhero.net/blog/say-hello-to-fullstackhero/",title:"Say hello to fullstackhero ðŸ‘‹",description:".NET WebAPI Boilerplate Template built with .NET 6.0. Incorporates the most essential Packages your projects will ever need. Follows Clean Architecture Principles.",content:""}),userinput.addEventListener('input',b,!0),suggestions.addEventListener('click',c,!0);function b(){var d,e;const c=5;d=this.value,e=a.search(d,{limit:c,enrich:!0}),suggestions.classList.remove('d-none'),suggestions.innerHTML="";const b={};e.forEach(a=>{a.result.forEach(a=>{b[a.doc.href]=a.doc})});for(const d in b){const e=b[d],a=document.createElement('div');if(a.innerHTML='<a href><span></span><span></span></a>',a.querySelector('a').href=d,a.querySelector('span:first-child').textContent=e.title,a.querySelector('span:nth-child(2)').textContent=e.description,suggestions.appendChild(a),suggestions.childElementCount==c)break}}function c(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()